# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.10.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1054, 808)
        MainWindow.setMinimumSize(QtCore.QSize(900, 808))
        self.view_pane = QtWidgets.QWidget(MainWindow)
        self.view_pane.setObjectName("view_pane")
        self.gridLayout = QtWidgets.QGridLayout(self.view_pane)
        self.gridLayout.setContentsMargins(0, 2, 0, 0)
        self.gridLayout.setObjectName("gridLayout")
        self.stacked_pages = QtWidgets.QStackedWidget(self.view_pane)
        self.stacked_pages.setObjectName("stacked_pages")
        self.gridLayout.addWidget(self.stacked_pages, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.view_pane)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1054, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuPlans = QtWidgets.QMenu(self.menubar)
        self.menuPlans.setObjectName("menuPlans")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuData_Browser = QtWidgets.QMenu(self.menuTools)
        self.menuData_Browser.setObjectName("menuData_Browser")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QtCore.QSize(34, 34))
        self.toolBar.setFloatable(False)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.actionCharacter = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("media/static/icons/9_64_3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCharacter.setIcon(icon)
        self.actionCharacter.setObjectName("actionCharacter")
        self.actionAdd_character = QtWidgets.QAction(MainWindow)
        self.actionAdd_character.setIcon(icon)
        self.actionAdd_character.setObjectName("actionAdd_character")
        self.actionManage_characters = QtWidgets.QAction(MainWindow)
        self.actionManage_characters.setObjectName("actionManage_characters")
        self.actionDelete_Character = QtWidgets.QAction(MainWindow)
        self.actionDelete_Character.setObjectName("actionDelete_Character")
        self.actionExport_Character = QtWidgets.QAction(MainWindow)
        self.actionExport_Character.setObjectName("actionExport_Character")
        self.actionHide_Character = QtWidgets.QAction(MainWindow)
        self.actionHide_Character.setObjectName("actionHide_Character")
        self.actionRestore_Settings = QtWidgets.QAction(MainWindow)
        self.actionRestore_Settings.setObjectName("actionRestore_Settings")
        self.actionSave_Settings = QtWidgets.QAction(MainWindow)
        self.actionSave_Settings.setObjectName("actionSave_Settings")
        self.actionReset_Settings = QtWidgets.QAction(MainWindow)
        self.actionReset_Settings.setObjectName("actionReset_Settings")
        self.actionClear_Cache = QtWidgets.QAction(MainWindow)
        self.actionClear_Cache.setObjectName("actionClear_Cache")
        self.actionExit = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("C:/Users/Nathan/.designer/backup/icons/9_64_6.png"), QtGui.QIcon.Normal,
                        QtGui.QIcon.Off)
        self.actionExit.setIcon(icon1)
        self.actionExit.setObjectName("actionExit")
        self.actionCopy_Skills_to_Clipboard = QtWidgets.QAction(MainWindow)
        self.actionCopy_Skills_to_Clipboard.setObjectName("actionCopy_Skills_to_Clipboard")
        self.actionNew_Plan = QtWidgets.QAction(MainWindow)
        self.actionNew_Plan.setObjectName("actionNew_Plan")
        self.actionCreate_Plan_From_Skillqueue = QtWidgets.QAction(MainWindow)
        self.actionCreate_Plan_From_Skillqueue.setObjectName("actionCreate_Plan_From_Skillqueue")
        self.actionImport_Plan_From_File = QtWidgets.QAction(MainWindow)
        self.actionImport_Plan_From_File.setObjectName("actionImport_Plan_From_File")
        self.actionManage_Plans = QtWidgets.QAction(MainWindow)
        self.actionManage_Plans.setObjectName("actionManage_Plans")
        self.actionAPI_Tester = QtWidgets.QAction(MainWindow)
        self.actionAPI_Tester.setObjectName("actionAPI_Tester")
        self.actionCharacters_Comparison = QtWidgets.QAction(MainWindow)
        self.actionCharacters_Comparison.setObjectName("actionCharacters_Comparison")
        self.actionSkill_Browser = QtWidgets.QAction(MainWindow)
        self.actionSkill_Browser.setObjectName("actionSkill_Browser")
        self.actionCertificate_Browser = QtWidgets.QAction(MainWindow)
        self.actionCertificate_Browser.setObjectName("actionCertificate_Browser")
        self.actionShip_Browser = QtWidgets.QAction(MainWindow)
        self.actionShip_Browser.setObjectName("actionShip_Browser")
        self.actionItem_Browser = QtWidgets.QAction(MainWindow)
        self.actionItem_Browser.setObjectName("actionItem_Browser")
        self.actionBlueprint_Browser = QtWidgets.QAction(MainWindow)
        self.actionBlueprint_Browser.setObjectName("actionBlueprint_Browser")
        self.actionSkills_Pie_Chart = QtWidgets.QAction(MainWindow)
        self.actionSkills_Pie_Chart.setObjectName("actionSkills_Pie_Chart")
        self.actionImplant_Groups = QtWidgets.QAction(MainWindow)
        self.actionImplant_Groups.setObjectName("actionImplant_Groups")
        self.actionOwned_Skillbooks = QtWidgets.QAction(MainWindow)
        self.actionOwned_Skillbooks.setObjectName("actionOwned_Skillbooks")
        self.actionOptions = QtWidgets.QAction(MainWindow)
        self.actionOptions.setObjectName("actionOptions")
        self.actionForums = QtWidgets.QAction(MainWindow)
        self.actionForums.setObjectName("actionForums")
        self.actionSuggest_a_Feature = QtWidgets.QAction(MainWindow)
        self.actionSuggest_a_Feature.setObjectName("actionSuggest_a_Feature")
        self.actionFollow_us_on_Twitter = QtWidgets.QAction(MainWindow)
        self.actionFollow_us_on_Twitter.setObjectName("actionFollow_us_on_Twitter")
        self.actionRead_The_Docs_Manual = QtWidgets.QAction(MainWindow)
        self.actionRead_The_Docs_Manual.setObjectName("actionRead_The_Docs_Manual")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionNavigation = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("media/static/icons/7_64_4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNavigation.setIcon(icon2)
        self.actionNavigation.setObjectName("actionNavigation")
        self.actionFleet_Watcher = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("media/static/icons/fleet.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFleet_Watcher.setIcon(icon3)
        self.actionFleet_Watcher.setObjectName("actionFleet_Watcher")
        self.menuFile.addAction(self.actionAdd_character)
        self.menuFile.addAction(self.actionManage_characters)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionDelete_Character)
        self.menuFile.addAction(self.actionExport_Character)
        self.menuFile.addAction(self.actionHide_Character)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionRestore_Settings)
        self.menuFile.addAction(self.actionSave_Settings)
        self.menuFile.addAction(self.actionReset_Settings)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClear_Cache)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionCopy_Skills_to_Clipboard)
        self.menuPlans.addAction(self.actionNew_Plan)
        self.menuPlans.addAction(self.actionCreate_Plan_From_Skillqueue)
        self.menuPlans.addAction(self.actionImport_Plan_From_File)
        self.menuPlans.addAction(self.actionManage_Plans)
        self.menuData_Browser.addAction(self.actionSkill_Browser)
        self.menuData_Browser.addAction(self.actionCertificate_Browser)
        self.menuData_Browser.addAction(self.actionShip_Browser)
        self.menuData_Browser.addAction(self.actionItem_Browser)
        self.menuData_Browser.addAction(self.actionBlueprint_Browser)
        self.menuTools.addAction(self.actionAPI_Tester)
        self.menuTools.addAction(self.actionCharacters_Comparison)
        self.menuTools.addAction(self.menuData_Browser.menuAction())
        self.menuTools.addAction(self.actionSkills_Pie_Chart)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionImplant_Groups)
        self.menuTools.addAction(self.actionOwned_Skillbooks)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionOptions)
        self.menuHelp.addAction(self.actionForums)
        self.menuHelp.addAction(self.actionSuggest_a_Feature)
        self.menuHelp.addAction(self.actionFollow_us_on_Twitter)
        self.menuHelp.addAction(self.actionRead_The_Docs_Manual)
        self.menuHelp.addSeparator()
        self.menuHelp.addAction(self.actionAbout)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuPlans.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.toolBar.addAction(self.actionCharacter)
        self.toolBar.addAction(self.actionNavigation)
        self.toolBar.addAction(self.actionFleet_Watcher)

        self.retranslateUi(MainWindow)
        self.stacked_pages.setCurrentIndex(-1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuPlans.setTitle(_translate("MainWindow", "Plans"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.menuData_Browser.setTitle(_translate("MainWindow", "Data Browser"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.actionCharacter.setText(_translate("MainWindow", "Character"))
        self.actionAdd_character.setText(_translate("MainWindow", "Add characters"))
        self.actionAdd_character.setStatusTip(_translate("MainWindow", "status_tip"))
        self.actionAdd_character.setWhatsThis(_translate("MainWindow", "testing whatsthis"))
        self.actionManage_characters.setText(_translate("MainWindow", "Manage characters"))
        self.actionDelete_Character.setText(_translate("MainWindow", "Delete Character"))
        self.actionExport_Character.setText(_translate("MainWindow", "Export Character"))
        self.actionHide_Character.setText(_translate("MainWindow", "Hide Character"))
        self.actionRestore_Settings.setText(_translate("MainWindow", "Restore Settings"))
        self.actionSave_Settings.setText(_translate("MainWindow", "Save Settings"))
        self.actionReset_Settings.setText(_translate("MainWindow", "Reset Settings"))
        self.actionClear_Cache.setText(_translate("MainWindow", "Clear Cache"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionCopy_Skills_to_Clipboard.setText(_translate("MainWindow", "Copy Skills to Clipboard"))
        self.actionNew_Plan.setText(_translate("MainWindow", "New Plan"))
        self.actionCreate_Plan_From_Skillqueue.setText(_translate("MainWindow", "Create Plan from Skill Queue"))
        self.actionImport_Plan_From_File.setText(_translate("MainWindow", "Import Plan From File"))
        self.actionManage_Plans.setText(_translate("MainWindow", "Manage Plans"))
        self.actionAPI_Tester.setText(_translate("MainWindow", "API Tester"))
        self.actionCharacters_Comparison.setText(_translate("MainWindow", "Characters Comparison"))
        self.actionSkill_Browser.setText(_translate("MainWindow", "Skill Browser"))
        self.actionCertificate_Browser.setText(_translate("MainWindow", "Certificate Browser"))
        self.actionShip_Browser.setText(_translate("MainWindow", "Ship Browser"))
        self.actionItem_Browser.setText(_translate("MainWindow", "Item Browser"))
        self.actionBlueprint_Browser.setText(_translate("MainWindow", "Blueprint Browser"))
        self.actionSkills_Pie_Chart.setText(_translate("MainWindow", "Skills Pie Chart"))
        self.actionImplant_Groups.setText(_translate("MainWindow", "Implant Groups"))
        self.actionOwned_Skillbooks.setText(_translate("MainWindow", "Owned Skillbooks"))
        self.actionOptions.setText(_translate("MainWindow", "Options"))
        self.actionForums.setText(_translate("MainWindow", "Forums"))
        self.actionSuggest_a_Feature.setText(_translate("MainWindow", "Suggest a Feature"))
        self.actionFollow_us_on_Twitter.setText(_translate("MainWindow", "Follow us on Twitter"))
        self.actionRead_The_Docs_Manual.setText(_translate("MainWindow", "Read The Docs (Manual)"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionNavigation.setText(_translate("MainWindow", "Navigation"))
        self.actionNavigation.setToolTip(_translate("MainWindow", "Open the character navigation tracker"))
        self.actionFleet_Watcher.setText(_translate("MainWindow", "Fleet Watcher"))
        self.actionFleet_Watcher.setToolTip(
            _translate("MainWindow", "Open the fleet watcher tool to see real time statistics."))
